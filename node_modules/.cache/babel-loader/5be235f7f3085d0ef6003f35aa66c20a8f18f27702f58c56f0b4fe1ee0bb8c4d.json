{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sbyy7\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\Sporting\\\\sporting\\\\src\\\\components\\\\common\\\\header\\\\headerUser.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { styled } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HeaderUser = () => {\n  _s();\n  const user = useSelector(state => state.auth.user);\n  const [username, setUsername] = useState(\"\");\n  useEffect(() => {\n    // 사용자 정보 요청\n    const fetchUserProfile = async () => {\n      try {\n        console.log(\"hello fetchUserProfile\");\n        console.log({\n          user_id: user.user_id\n        });\n        const response = await fetch(`http://localhost:8000/users/${user.user_id}/profile`, {\n          headers: {\n            Authorization: `Bearer ${user.access_token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setUsername(data.username); // 사용자 이름 설정\n        } else {\n          console.error(\"사용자 정보 요청 실패\");\n        }\n      } catch (error) {\n        console.error(\"사용자 정보 요청 에러:\", error);\n      }\n    };\n    if (user) {\n      fetchUserProfile();\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ToMyPage, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"My Page \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(HeaderUser, \"nL+ViYrAR+W5tyORqBV68mmHNpE=\", false, function () {\n  return [useSelector];\n});\n_c = HeaderUser;\nexport default HeaderUser;\nconst ToMyPage = styled.div`\n    font-weight: 700;\n    font-size: 2rem;\n    color: brown;\n    margin: auto;\n`;\n_c2 = ToMyPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"HeaderUser\");\n$RefreshReg$(_c2, \"ToMyPage\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","HeaderUser","_s","user","state","auth","username","setUsername","fetchUserProfile","console","log","user_id","response","fetch","headers","Authorization","access_token","ok","data","json","error","children","ToMyPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","$RefreshReg$"],"sources":["C:/Users/sbyy7/OneDrive/바탕 화면/Sporting/sporting/src/components/common/header/headerUser.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { styled } from \"styled-components\";\r\n\r\nconst HeaderUser = () => {\r\n    const user = useSelector((state) => state.auth.user);\r\n    const [username, setUsername] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // 사용자 정보 요청\r\n        const fetchUserProfile = async () => {\r\n            try {\r\n                console.log(\"hello fetchUserProfile\");\r\n                console.log({ user_id: user.user_id });\r\n                const response = await fetch(\r\n                    `http://localhost:8000/users/${user.user_id}/profile`,\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${user.access_token}`,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    setUsername(data.username); // 사용자 이름 설정\r\n                } else {\r\n                    console.error(\"사용자 정보 요청 실패\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"사용자 정보 요청 에러:\", error);\r\n            }\r\n        };\r\n\r\n        if (user) {\r\n            fetchUserProfile();\r\n        }\r\n    }, [user]);\r\n    return (\r\n        <>\r\n            <ToMyPage>\r\n                <div>My Page {username}</div>\r\n            </ToMyPage>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HeaderUser;\r\n\r\nconst ToMyPage = styled.div`\r\n    font-weight: 700;\r\n    font-size: 2rem;\r\n    color: brown;\r\n    margin: auto;\r\n`;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,IAAI,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,IAAI,CAAC;EACpD,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCD,OAAO,CAACC,GAAG,CAAC;UAAEC,OAAO,EAAER,IAAI,CAACQ;QAAQ,CAAC,CAAC;QACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,+BAA8BV,IAAI,CAACQ,OAAQ,UAAS,EACrD;UACIG,OAAO,EAAE;YACLC,aAAa,EAAG,UAASZ,IAAI,CAACa,YAAa;UAC/C;QACJ,CACJ,CAAC;QAED,IAAIJ,QAAQ,CAACK,EAAE,EAAE;UACb,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;UAClCZ,WAAW,CAACW,IAAI,CAACZ,QAAQ,CAAC,CAAC,CAAC;QAChC,CAAC,MAAM;UACHG,OAAO,CAACW,KAAK,CAAC,cAAc,CAAC;QACjC;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZX,OAAO,CAACW,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACzC;IACJ,CAAC;IAED,IAAIjB,IAAI,EAAE;MACNK,gBAAgB,CAAC,CAAC;IACtB;EACJ,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EACV,oBACIL,OAAA,CAAAE,SAAA;IAAAqB,QAAA,eACIvB,OAAA,CAACwB,QAAQ;MAAAD,QAAA,eACLvB,OAAA;QAAAuB,QAAA,GAAK,UAAQ,EAACf,QAAQ;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC,gBACb,CAAC;AAEX,CAAC;AAACxB,EAAA,CAzCID,UAAU;EAAA,QACCN,WAAW;AAAA;AAAAgC,EAAA,GADtB1B,UAAU;AA2ChB,eAAeA,UAAU;AAEzB,MAAMqB,QAAQ,GAAG1B,MAAM,CAACgC,GAAI;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIP,QAAQ;AAAA,IAAAK,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}