{"ast":null,"code":"'use strict';\n\nvar MAX_SAFE_INTEGER = require('../helpers/maxSafeInteger');\nvar ToIntegerOrInfinity = require('./ToIntegerOrInfinity');\nmodule.exports = function ToLength(argument) {\n  var len = ToIntegerOrInfinity(argument);\n  if (len <= 0) {\n    return 0;\n  } // includes converting -0 to +0\n  if (len > MAX_SAFE_INTEGER) {\n    return MAX_SAFE_INTEGER;\n  }\n  return len;\n};","map":{"version":3,"names":["MAX_SAFE_INTEGER","require","ToIntegerOrInfinity","module","exports","ToLength","argument","len"],"sources":["C:/Spor+ing/Sporting_front/node_modules/es-abstract/2022/ToLength.js"],"sourcesContent":["'use strict';\r\n\r\nvar MAX_SAFE_INTEGER = require('../helpers/maxSafeInteger');\r\n\r\nvar ToIntegerOrInfinity = require('./ToIntegerOrInfinity');\r\n\r\nmodule.exports = function ToLength(argument) {\r\n\tvar len = ToIntegerOrInfinity(argument);\r\n\tif (len <= 0) { return 0; } // includes converting -0 to +0\r\n\tif (len > MAX_SAFE_INTEGER) { return MAX_SAFE_INTEGER; }\r\n\treturn len;\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AAE3D,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAE1DE,MAAM,CAACC,OAAO,GAAG,SAASC,QAAQA,CAACC,QAAQ,EAAE;EAC5C,IAAIC,GAAG,GAAGL,mBAAmB,CAACI,QAAQ,CAAC;EACvC,IAAIC,GAAG,IAAI,CAAC,EAAE;IAAE,OAAO,CAAC;EAAE,CAAC,CAAC;EAC5B,IAAIA,GAAG,GAAGP,gBAAgB,EAAE;IAAE,OAAOA,gBAAgB;EAAE;EACvD,OAAOO,GAAG;AACX,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}