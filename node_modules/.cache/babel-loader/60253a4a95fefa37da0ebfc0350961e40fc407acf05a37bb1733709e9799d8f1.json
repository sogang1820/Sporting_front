{"ast":null,"code":"'use strict';\n\nvar IsCallable = require('es-abstract/2021/IsCallable');\nvar functionsHaveNames = require('functions-have-names')();\nvar callBound = require('call-bind/callBound');\nvar $functionToString = callBound('Function.prototype.toString');\nvar $stringMatch = callBound('String.prototype.match');\nvar classRegex = /^class /;\nvar isClass = function isClassConstructor(fn) {\n  if (IsCallable(fn)) {\n    return false;\n  }\n  if (typeof fn !== 'function') {\n    return false;\n  }\n  try {\n    var match = $stringMatch($functionToString(fn), classRegex);\n    return !!match;\n  } catch (e) {}\n  return false;\n};\nvar regex = /\\s*function\\s+([^(\\s]*)\\s*/;\nvar functionProto = Function.prototype;\nmodule.exports = function getName() {\n  if (!isClass(this) && !IsCallable(this)) {\n    throw new TypeError('Function.prototype.name sham getter called on non-function');\n  }\n  if (functionsHaveNames) {\n    return this.name;\n  }\n  if (this === functionProto) {\n    return '';\n  }\n  var str = $functionToString(this);\n  var match = $stringMatch(str, regex);\n  var name = match && match[1];\n  return name;\n};","map":{"version":3,"names":["IsCallable","require","functionsHaveNames","callBound","$functionToString","$stringMatch","classRegex","isClass","isClassConstructor","fn","match","e","regex","functionProto","Function","prototype","module","exports","getName","TypeError","name","str"],"sources":["C:/Spor+ing/Sporting_front/node_modules/function.prototype.name/implementation.js"],"sourcesContent":["'use strict';\r\n\r\nvar IsCallable = require('es-abstract/2021/IsCallable');\r\nvar functionsHaveNames = require('functions-have-names')();\r\nvar callBound = require('call-bind/callBound');\r\nvar $functionToString = callBound('Function.prototype.toString');\r\nvar $stringMatch = callBound('String.prototype.match');\r\n\r\nvar classRegex = /^class /;\r\n\r\nvar isClass = function isClassConstructor(fn) {\r\n\tif (IsCallable(fn)) {\r\n\t\treturn false;\r\n\t}\r\n\tif (typeof fn !== 'function') {\r\n\t\treturn false;\r\n\t}\r\n\ttry {\r\n\t\tvar match = $stringMatch($functionToString(fn), classRegex);\r\n\t\treturn !!match;\r\n\t} catch (e) {}\r\n\treturn false;\r\n};\r\n\r\nvar regex = /\\s*function\\s+([^(\\s]*)\\s*/;\r\n\r\nvar functionProto = Function.prototype;\r\n\r\nmodule.exports = function getName() {\r\n\tif (!isClass(this) && !IsCallable(this)) {\r\n\t\tthrow new TypeError('Function.prototype.name sham getter called on non-function');\r\n\t}\r\n\tif (functionsHaveNames) {\r\n\t\treturn this.name;\r\n\t}\r\n\tif (this === functionProto) {\r\n\t\treturn '';\r\n\t}\r\n\tvar str = $functionToString(this);\r\n\tvar match = $stringMatch(str, regex);\r\n\tvar name = match && match[1];\r\n\treturn name;\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,6BAA6B,CAAC;AACvD,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC;AAC1D,IAAIE,SAAS,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIG,iBAAiB,GAAGD,SAAS,CAAC,6BAA6B,CAAC;AAChE,IAAIE,YAAY,GAAGF,SAAS,CAAC,wBAAwB,CAAC;AAEtD,IAAIG,UAAU,GAAG,SAAS;AAE1B,IAAIC,OAAO,GAAG,SAASC,kBAAkBA,CAACC,EAAE,EAAE;EAC7C,IAAIT,UAAU,CAACS,EAAE,CAAC,EAAE;IACnB,OAAO,KAAK;EACb;EACA,IAAI,OAAOA,EAAE,KAAK,UAAU,EAAE;IAC7B,OAAO,KAAK;EACb;EACA,IAAI;IACH,IAAIC,KAAK,GAAGL,YAAY,CAACD,iBAAiB,CAACK,EAAE,CAAC,EAAEH,UAAU,CAAC;IAC3D,OAAO,CAAC,CAACI,KAAK;EACf,CAAC,CAAC,OAAOC,CAAC,EAAE,CAAC;EACb,OAAO,KAAK;AACb,CAAC;AAED,IAAIC,KAAK,GAAG,4BAA4B;AAExC,IAAIC,aAAa,GAAGC,QAAQ,CAACC,SAAS;AAEtCC,MAAM,CAACC,OAAO,GAAG,SAASC,OAAOA,CAAA,EAAG;EACnC,IAAI,CAACX,OAAO,CAAC,IAAI,CAAC,IAAI,CAACP,UAAU,CAAC,IAAI,CAAC,EAAE;IACxC,MAAM,IAAImB,SAAS,CAAC,4DAA4D,CAAC;EAClF;EACA,IAAIjB,kBAAkB,EAAE;IACvB,OAAO,IAAI,CAACkB,IAAI;EACjB;EACA,IAAI,IAAI,KAAKP,aAAa,EAAE;IAC3B,OAAO,EAAE;EACV;EACA,IAAIQ,GAAG,GAAGjB,iBAAiB,CAAC,IAAI,CAAC;EACjC,IAAIM,KAAK,GAAGL,YAAY,CAACgB,GAAG,EAAET,KAAK,CAAC;EACpC,IAAIQ,IAAI,GAAGV,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC;EAC5B,OAAOU,IAAI;AACZ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}