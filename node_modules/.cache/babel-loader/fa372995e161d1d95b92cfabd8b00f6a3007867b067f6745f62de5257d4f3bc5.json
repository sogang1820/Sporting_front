{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spor+ing\\\\Sporting_front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Main from \"./pages/mainPage\";\nimport Login from \"./pages/loginPage\";\nimport Board from \"./pages/boardPage\";\nimport Signup from \"./pages/signupPage\";\nimport Reservation from \"./pages/reservationPage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loginSuccess, logoutSuccess } from \"./redux/actions/authActions\";\nimport axios from \"axios\";\nimport MyPage from \"./pages/myPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const checkLoginStatus = async (user_id, password) => {\n      try {\n        const response = await axios.post(\"http://localhost:8000/login\", {\n          user_id,\n          password\n        }); // 로그인 상태 확인하는 API 호출\n        const user = response.data.user;\n        if (user) {\n          dispatch(loginSuccess(user));\n        } else {\n          dispatch(logoutSuccess());\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    checkLoginStatus();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleLogin = user => {\n    dispatch(loginSuccess(user));\n  };\n  const handleLogout = () => {\n    dispatch(logoutSuccess());\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Main, {\n            isLoggedIn: isLoggedIn,\n            onLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/board\",\n          element: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/reservation\",\n          element: /*#__PURE__*/_jsxDEV(Reservation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/mypage\",\n          element: /*#__PURE__*/_jsxDEV(MyPage, {\n            isLoggedIn: isLoggedIn,\n            onLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"g5uETS2fIYXug5OFaym/DvjvmPU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","BrowserRouter","Router","Route","Routes","Main","Login","Board","Signup","Reservation","useSelector","useDispatch","loginSuccess","logoutSuccess","axios","MyPage","jsxDEV","_jsxDEV","App","_s","isLoggedIn","state","auth","dispatch","checkLoginStatus","user_id","password","response","post","user","data","error","console","handleLogin","handleLogout","children","path","element","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["C:/Spor+ing/Sporting_front/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Main from \"./pages/mainPage\";\r\nimport Login from \"./pages/loginPage\";\r\nimport Board from \"./pages/boardPage\";\r\nimport Signup from \"./pages/signupPage\";\r\nimport Reservation from \"./pages/reservationPage\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loginSuccess, logoutSuccess } from \"./redux/actions/authActions\";\r\nimport axios from \"axios\";\r\nimport MyPage from \"./pages/myPage\";\r\n\r\nconst App = () => {\r\n    const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const checkLoginStatus = async (user_id, password) => {\r\n            try {\r\n                const response = await axios.post(\"http://localhost:8000/login\", {\r\n                    user_id,\r\n                    password,\r\n                }); // 로그인 상태 확인하는 API 호출\r\n                const user = response.data.user;\r\n                if (user) {\r\n                    dispatch(loginSuccess(user));\r\n                } else {\r\n                    dispatch(logoutSuccess());\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        checkLoginStatus();\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const handleLogin = (user) => {\r\n        dispatch(loginSuccess(user));\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logoutSuccess());\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                {/* 네비게이션 메뉴 등의 공통 요소를 추가할 수 있습니다 */}\r\n                <Routes>\r\n                    <Route\r\n                        path=\"/\"\r\n                        element={\r\n                            <Main\r\n                                isLoggedIn={isLoggedIn}\r\n                                onLogout={handleLogout}\r\n                            />\r\n                        }\r\n                    />\r\n                    <Route\r\n                        path=\"/login\"\r\n                        element={<Login onLogin={handleLogin} />}\r\n                    />\r\n                    <Route path=\"/signup\" element={<Signup />} />\r\n                    <Route path=\"/board\" element={<Board />} />\r\n                    <Route path=\"/reservation\" element={<Reservation />} />\r\n                    <Route\r\n                        path=\"/mypage\"\r\n                        element={\r\n                            <MyPage\r\n                                isLoggedIn={isLoggedIn}\r\n                                onLogout={handleLogout}\r\n                            />\r\n                        }\r\n                    />\r\n\r\n                    {/* 추가적인 페이지 라우트를 설정 */}\r\n                </Routes>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}